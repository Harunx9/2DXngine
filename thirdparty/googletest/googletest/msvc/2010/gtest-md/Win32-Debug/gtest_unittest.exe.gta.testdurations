<?xml version="1.0" encoding="utf-8"?>
<GtaTestDurations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Executable>C:\Users\szwan\Documents\Projects\2DXngine\thirdparty\googletest\googletest\msvc\2010\gtest-md\Win32-Debug\gtest_unittest.exe</Executable>
  <TestDurations>
    <TestDuration Test="AddReferenceTest.AddsReference" Duration="1" />
    <TestDuration Test="AddReferenceTest.DoesNotAffectReferenceType" Duration="1" />
    <TestDuration Test="AddReferenceTest.MacroVersion" Duration="1" />
    <TestDuration Test="AlternativeNameTest.Works" Duration="1" />
    <TestDuration Test="ArrayAwareFindTest.WorksForOneDimensionalArray" Duration="1" />
    <TestDuration Test="ArrayAwareFindTest.WorksForTwoDimensionalArray" Duration="1" />
    <TestDuration Test="ArrayEqTest.WorksForDegeneratedArrays" Duration="1" />
    <TestDuration Test="ArrayEqTest.WorksForOneDimensionalArrays" Duration="1" />
    <TestDuration Test="ArrayEqTest.WorksForTwoDimensionalArrays" Duration="1" />
    <TestDuration Test="AssertHelperTest.AssertHelperIsSmall" Duration="1" />
    <TestDuration Test="AssertionResultTest.CanStreamOstreamManipulators" Duration="1" />
    <TestDuration Test="AssertionResultTest.ConstructibleFromImplicitlyConvertible" Duration="1" />
    <TestDuration Test="AssertionResultTest.ConstructionWorks" Duration="1" />
    <TestDuration Test="AssertionResultTest.CopyConstructorWorksWhenNotOptimied" Duration="1" />
    <TestDuration Test="AssertionResultTest.NegationWorks" Duration="1" />
    <TestDuration Test="AssertionResultTest.StreamingWorks" Duration="1" />
    <TestDuration Test="AssertionSyntaxTest.BasicAssertionsBehavesLikeSingleStatement" Duration="1" />
    <TestDuration Test="AssertionSyntaxTest.ExceptionAssertionsBehavesLikeSingleStatement" Duration="1" />
    <TestDuration Test="AssertionSyntaxTest.NoFatalFailureAssertionsBehavesLikeSingleStatement" Duration="1" />
    <TestDuration Test="AssertionSyntaxTest.WorksWithConst" Duration="1" />
    <TestDuration Test="AssertionSyntaxTest.WorksWithSwitch" Duration="1" />
    <TestDuration Test="AssertionTest.AnonymousEnum" Duration="1" />
    <TestDuration Test="AssertionTest.AppendUserMessage" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_ANY_THROW" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_EQ" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_EQ_NULL" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_FALSE" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_GE" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_GT" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_LE" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_LT" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_NE" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_NO_THROW" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_THROW" Duration="1" />
    <TestDuration Test="AssertionTest.ASSERT_TRUE" Duration="1" />
    <TestDuration Test="AssertionTest.AssertFalseWithAssertionResult" Duration="1" />
    <TestDuration Test="AssertionTest.AssertPrecedence" Duration="1" />
    <TestDuration Test="AssertionTest.AssertTrueWithAssertionResult" Duration="1" />
    <TestDuration Test="AssertionTest.AssertWorksWithUncopyableObject" Duration="1" />
    <TestDuration Test="AssertionTest.EqFailure" Duration="1" />
    <TestDuration Test="AssertionTest.EqFailureWithDiff" Duration="2" />
    <TestDuration Test="AssertionTest.ExpectWorksWithUncopyableObject" Duration="1" />
    <TestDuration Test="AssertionTest.NamedEnum" Duration="1" />
    <TestDuration Test="AssertionTest.NonFixtureSubroutine" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.ASSERT" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.ASSERT_FALSE" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.ASSERT_FLOATING" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.ASSERT_STR" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.ASSERT_TRUE" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.EXPECT" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.FAIL" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.SUCCEED" Duration="1" />
    <TestDuration Test="AssertionWithMessageTest.WideStringMessage" Duration="1" />
    <TestDuration Test="CodeLocationForTEST.Verify" Duration="1" />
    <TestDuration Test="CodeLocationForTESTF.Verify" Duration="1" />
    <TestDuration Test="CodeLocationForTESTP.Verify/0" Duration="1" />
    <TestDuration Test="CodeLocationForTYPEDTEST/0.Verify" Duration="1" />
    <TestDuration Test="CodePointToUtf8Test.CanEncode12To16Bits" Duration="1" />
    <TestDuration Test="CodePointToUtf8Test.CanEncode8To11Bits" Duration="1" />
    <TestDuration Test="CodePointToUtf8Test.CanEncodeAscii" Duration="1" />
    <TestDuration Test="CodePointToUtf8Test.CanEncodeNul" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesColorsWhenGTestColorFlagIsAliasOfYes" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesColorsWhenGTestColorFlagIsYes" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesColorsWhenStdoutIsTty" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesColorsWhenTermSupportsColors" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsInvalid" Duration="1" />
    <TestDuration Test="ColoredOutputTest.UsesNoColorWhenGTestColorFlagIsNo" Duration="1" />
    <TestDuration Test="CommandLineFlagsTest.CanBeAccessedInCodeOnceGTestHIsIncluded" Duration="1" />
    <TestDuration Test="ComparisonAssertionTest.AcceptsUnprintableArgs" Duration="2" />
    <TestDuration Test="CompileAssertTypesEqual.CompilesWhenTypesAreEqual" Duration="1" />
    <TestDuration Test="ContainerUtilityDeathTest.ShuffleRange" Duration="110" />
    <TestDuration Test="ContainerUtilityTest.CountIf" Duration="1" />
    <TestDuration Test="ContainerUtilityTest.ForEach" Duration="1" />
    <TestDuration Test="ContainerUtilityTest.GetElementOr" Duration="1" />
    <TestDuration Test="CopyArrayTest.WorksForDegeneratedArrays" Duration="1" />
    <TestDuration Test="CopyArrayTest.WorksForOneDimensionalArrays" Duration="1" />
    <TestDuration Test="CopyArrayTest.WorksForTwoDimensionalArrays" Duration="1" />
    <TestDuration Test="CurrentTestInfoTest.WorksForFirstTestInATestCase" Duration="1" />
    <TestDuration Test="CurrentTestInfoTest.WorksForSecondTestInATestCase" Duration="1" />
    <TestDuration Test="DisabledTest.NotDISABLED_TestShouldRun" Duration="1" />
    <TestDuration Test="DoubleTest.AlmostZeros" Duration="1" />
    <TestDuration Test="DoubleTest.ASSERT_NEAR" Duration="1" />
    <TestDuration Test="DoubleTest.Commutative" Duration="1" />
    <TestDuration Test="DoubleTest.DoubleLEFails" Duration="1" />
    <TestDuration Test="DoubleTest.DoubleLESucceeds" Duration="1" />
    <TestDuration Test="DoubleTest.EXPECT_NEAR" Duration="1" />
    <TestDuration Test="DoubleTest.Infinity" Duration="1" />
    <TestDuration Test="DoubleTest.LargeDiff" Duration="1" />
    <TestDuration Test="DoubleTest.NaN" Duration="1" />
    <TestDuration Test="DoubleTest.Reflexive" Duration="1" />
    <TestDuration Test="DoubleTest.Size" Duration="1" />
    <TestDuration Test="DoubleTest.SmallDiff" Duration="1" />
    <TestDuration Test="DoubleTest.Zeros" Duration="1" />
    <TestDuration Test="EditDistance.TestCases" Duration="8" />
    <TestDuration Test="EqAssertionTest.Bool" Duration="1" />
    <TestDuration Test="EqAssertionTest.Char" Duration="1" />
    <TestDuration Test="EqAssertionTest.CharPointer" Duration="1" />
    <TestDuration Test="EqAssertionTest.Int" Duration="1" />
    <TestDuration Test="EqAssertionTest.OtherPointer" Duration="1" />
    <TestDuration Test="EqAssertionTest.StdString" Duration="1" />
    <TestDuration Test="EqAssertionTest.StdWideString" Duration="1" />
    <TestDuration Test="EqAssertionTest.Time_T" Duration="1" />
    <TestDuration Test="EqAssertionTest.WideChar" Duration="1" />
    <TestDuration Test="EqAssertionTest.WideCharPointer" Duration="1" />
    <TestDuration Test="EventListenerDeathTest.EventsNotForwardedInDeathTestSubprecesses" Duration="27" />
    <TestDuration Test="EventListenerTest.AppendKeepsOrder" Duration="1" />
    <TestDuration Test="EventListenerTest.default_result_printer" Duration="1" />
    <TestDuration Test="EventListenerTest.default_xml_generator" Duration="1" />
    <TestDuration Test="EventListenerTest.RemovingDefaultResultPrinterWorks" Duration="1" />
    <TestDuration Test="EventListenerTest.RemovingDefaultXmlGeneratorWorks" Duration="1" />
    <TestDuration Test="EventListenerTest.SuppressEventForwarding" Duration="1" />
    <TestDuration Test="ExpectFailureWithThreadsTest.ExpectFatalFailureOnAllThreads" Duration="1" />
    <TestDuration Test="ExpectFailureWithThreadsTest.ExpectNonFatalFailureOnAllThreads" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.AcceptsStdStringObject" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.CanBeUsedInNonVoidFunction" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.CatchesFatalFailureOnAllThreads" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.CatchesFatalFaliure" Duration="1" />
    <TestDuration Test="ExpectFatalFailureTest.DoesNotAbort" Duration="1" />
    <TestDuration Test="ExpectNonfatalFailureTest.AcceptsMacroThatExpandsToUnprotectedComma" Duration="1" />
    <TestDuration Test="ExpectNonfatalFailureTest.AcceptsStdStringObject" Duration="1" />
    <TestDuration Test="ExpectNonfatalFailureTest.CatchesNonfatalFailure" Duration="1" />
    <TestDuration Test="ExpectNonfatalFailureTest.CatchesNonfatalFailureOnAllThreads" Duration="1" />
    <TestDuration Test="ExpectTest.ASSERT_EQ_0" Duration="1" />
    <TestDuration Test="ExpectTest.ASSERT_EQ_Double" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_ANY_THROW" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_EQ" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_EQ_0" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_EQ_Double" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_EQ_NULL" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_FALSE" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_GE" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_GT" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_LE" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_LT" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_NE" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_NO_THROW" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_THROW" Duration="1" />
    <TestDuration Test="ExpectTest.EXPECT_TRUE" Duration="1" />
    <TestDuration Test="ExpectTest.ExpectFalseWithAssertionResult" Duration="1" />
    <TestDuration Test="ExpectTest.ExpectPrecedence" Duration="1" />
    <TestDuration Test="ExpectTest.ExpectTrueWithAssertionResult" Duration="1" />
    <TestDuration Test="ExpectThrowTest.DoesNotGenerateUnreachableCodeWarning" Duration="1" />
    <TestDuration Test="FlagfileTest.Empty" Duration="2" />
    <TestDuration Test="FlagfileTest.FilterNonEmpty" Duration="4" />
    <TestDuration Test="FlagfileTest.SeveralFlags" Duration="5" />
    <TestDuration Test="FloatTest.AlmostZeros" Duration="1" />
    <TestDuration Test="FloatTest.ASSERT_NEAR" Duration="1" />
    <TestDuration Test="FloatTest.Commutative" Duration="1" />
    <TestDuration Test="FloatTest.EXPECT_NEAR" Duration="1" />
    <TestDuration Test="FloatTest.FloatLEFails" Duration="1" />
    <TestDuration Test="FloatTest.FloatLESucceeds" Duration="1" />
    <TestDuration Test="FloatTest.Infinity" Duration="1" />
    <TestDuration Test="FloatTest.LargeDiff" Duration="1" />
    <TestDuration Test="FloatTest.NaN" Duration="1" />
    <TestDuration Test="FloatTest.Reflexive" Duration="1" />
    <TestDuration Test="FloatTest.Size" Duration="1" />
    <TestDuration Test="FloatTest.SmallDiff" Duration="1" />
    <TestDuration Test="FloatTest.Zeros" Duration="1" />
    <TestDuration Test="FormatEpochTimeInMillisAsIso8601Test.MillisecondsDoNotAffectResult" Duration="1" />
    <TestDuration Test="FormatEpochTimeInMillisAsIso8601Test.Prints24HourTime" Duration="1" />
    <TestDuration Test="FormatEpochTimeInMillisAsIso8601Test.PrintsEpochStart" Duration="1" />
    <TestDuration Test="FormatEpochTimeInMillisAsIso8601Test.PrintsLeadingZeroes" Duration="1" />
    <TestDuration Test="FormatEpochTimeInMillisAsIso8601Test.PrintsTwoDigitSegments" Duration="1" />
    <TestDuration Test="FormatTimeInMillisAsSecondsTest.FormatsNegativeNumber" Duration="1" />
    <TestDuration Test="FormatTimeInMillisAsSecondsTest.FormatsPositiveNumber" Duration="1" />
    <TestDuration Test="FormatTimeInMillisAsSecondsTest.FormatsZero" Duration="1" />
    <TestDuration Test="FRIEND_TEST_Test.TEST" Duration="1" />
    <TestDuration Test="FRIEND_TEST_Test2.TEST_F" Duration="1" />
    <TestDuration Test="GetCurrentOsStackTraceExceptTopTest.ReturnsTheStackTrace" Duration="1" />
    <TestDuration Test="GetNextRandomSeedTest.WorksForValidInput" Duration="1" />
    <TestDuration Test="GetRandomSeedFromFlagTest.HandlesZero" Duration="1" />
    <TestDuration Test="GetRandomSeedFromFlagTest.NormalizesInvalidSeed" Duration="1" />
    <TestDuration Test="GetRandomSeedFromFlagTest.PreservesValidSeed" Duration="1" />
    <TestDuration Test="GetTestTypeIdTest.ReturnsTheSameValueInsideOrOutsideOfGoogleTest" Duration="1" />
    <TestDuration Test="GetTypeIdTest.ReturnsDifferentValuesForDifferentTypes" Duration="1" />
    <TestDuration Test="GetTypeIdTest.ReturnsSameValueForSameType" Duration="1" />
    <TestDuration Test="GTestFlagSaverTest.ModifyGTestFlags" Duration="1" />
    <TestDuration Test="GTestFlagSaverTest.VerifyGTestFlags" Duration="1" />
    <TestDuration Test="GTestReferenceToConstTest.Works" Duration="1" />
    <TestDuration Test="HasFailureTest.ReturnsFalseWhenThereIsNoFailure" Duration="1" />
    <TestDuration Test="HasFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures" Duration="1" />
    <TestDuration Test="HasFailureTest.ReturnsTrueWhenThereIsFatalFailure" Duration="1" />
    <TestDuration Test="HasFailureTest.ReturnsTrueWhenThereIsNonfatalFailure" Duration="1" />
    <TestDuration Test="HasFailureTest.WorksOutsideOfTestBody" Duration="1" />
    <TestDuration Test="HasFailureTest.WorksOutsideOfTestBody2" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.ReturnsFalseWhenThereIsNoFailure" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.ReturnsFalseWhenThereIsOnlyFatalFailure" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.ReturnsTrueWhenThereAreFatalAndNonfatalFailures" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.ReturnsTrueWhenThereIsNonfatalFailure" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.WorksOutsideOfTestBody" Duration="1" />
    <TestDuration Test="HasNonfatalFailureTest.WorksOutsideOfTestBody2" Duration="1" />
    <TestDuration Test="HRESULTAssertionTest.ASSERT_HRESULT_FAILED" Duration="1" />
    <TestDuration Test="HRESULTAssertionTest.ASSERT_HRESULT_SUCCEEDED" Duration="1" />
    <TestDuration Test="HRESULTAssertionTest.EXPECT_HRESULT_FAILED" Duration="1" />
    <TestDuration Test="HRESULTAssertionTest.EXPECT_HRESULT_SUCCEEDED" Duration="1" />
    <TestDuration Test="HRESULTAssertionTest.Streaming" Duration="1" />
    <TestDuration Test="ImplicitlyConvertibleTest.ValueIsCompileTimeConstant" Duration="1" />
    <TestDuration Test="ImplicitlyConvertibleTest.ValueIsFalseWhenNotConvertible" Duration="1" />
    <TestDuration Test="ImplicitlyConvertibleTest.ValueIsTrueWhenConvertible" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.AlsoRunDisabledTestsFalse" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.AlsoRunDisabledTestsFlag" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.AlsoRunDisabledTestsTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.BreakOnFailureFalse_0" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.BreakOnFailureFalse_f" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.BreakOnFailureFalse_F" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.BreakOnFailureTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.BreakOnFailureWithoutValue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.CatchExceptions" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.DeathTestUseFork" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.DuplicatedFlags" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.Empty" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.FilterBad" Duration="5" />
    <TestDuration Test="InitGoogleTestTest.FilterEmpty" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.FilterNonEmpty" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ListTestsFalse" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ListTestsFalse_f" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ListTestsFalse_F" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ListTestsFlag" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ListTestsTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.NoFlag" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.OutputEmpty" Duration="2" />
    <TestDuration Test="InitGoogleTestTest.OutputXml" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.OutputXmlDirectory" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.OutputXmlFile" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.PrintTimeFalse" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.PrintTimeFalse_f" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.PrintTimeFalse_F" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.PrintTimeFlag" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.PrintTimeTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.RandomSeed" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.Repeat" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ShuffleFalse_0" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ShuffleTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ShuffleWithoutValue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.StackTraceDepth" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.StreamResultTo" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ThrowOnFailureFalse_0" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ThrowOnFailureTrue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.ThrowOnFailureWithoutValue" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.UnrecognizedFlag" Duration="1" />
    <TestDuration Test="InitGoogleTestTest.WideStrings" Duration="1" />
    <TestDuration Test="Int32FromEnvOrDieDeathTest.AbortsOnFailure" Duration="26" />
    <TestDuration Test="Int32FromEnvOrDieDeathTest.AbortsOnInt32Overflow" Duration="26" />
    <TestDuration Test="Int32FromEnvOrDieTest.ParsesAndReturnsValidValue" Duration="1" />
    <TestDuration Test="Int32FromGTestEnvTest.ParsesAndReturnsValidValue" Duration="1" />
    <TestDuration Test="Int32FromGTestEnvTest.ReturnsDefaultWhenValueIsInvalid" Duration="1" />
    <TestDuration Test="Int32FromGTestEnvTest.ReturnsDefaultWhenValueOverflows" Duration="1" />
    <TestDuration Test="Int32FromGTestEnvTest.ReturnsDefaultWhenVariableIsNotSet" Duration="1" />
    <TestDuration Test="IsAProtocolMessageTest.ValueIsCompileTimeConstant" Duration="1" />
    <TestDuration Test="IsAProtocolMessageTest.ValueIsFalseWhenTypeIsNotAProtocolMessage" Duration="1" />
    <TestDuration Test="IsAProtocolMessageTest.ValueIsTrueWhenTypeIsAProtocolMessage" Duration="1" />
    <TestDuration Test="IsContainerTestTest.WorksForContainer" Duration="1" />
    <TestDuration Test="IsContainerTestTest.WorksForNonContainer" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.GeneratesCorrectMessageForStdString" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.GeneratesCorrectMessageForWideCString" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.ReturnsCorrectResultForCString" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.ReturnsCorrectResultForStdWstring" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.ReturnsCorrectResultForWideCString" Duration="1" />
    <TestDuration Test="IsNotSubstringTest.ReturnsCorrectResultsForStdString" Duration="1" />
    <TestDuration Test="IsSubstringTest.GeneratesCorrectMessageForCString" Duration="1" />
    <TestDuration Test="IsSubstringTest.GeneratesCorrectMessageForWstring" Duration="1" />
    <TestDuration Test="IsSubstringTest.ReturnsCorrectResultForCString" Duration="1" />
    <TestDuration Test="IsSubstringTest.ReturnsCorrectResultForStdWstring" Duration="1" />
    <TestDuration Test="IsSubstringTest.ReturnsCorrectResultForWideCString" Duration="1" />
    <TestDuration Test="IsSubstringTest.ReturnsCorrectResultsForStdString" Duration="1" />
    <TestDuration Test="MacroTest.ADD_FAILURE" Duration="1" />
    <TestDuration Test="MacroTest.ADD_FAILURE_AT" Duration="1" />
    <TestDuration Test="MacroTest.FAIL" Duration="1" />
    <TestDuration Test="MacroTest.SUCCEED" Duration="1" />
    <TestDuration Test="MessageTest.CanStreamUserTypeInGlobalNameSpace" Duration="1" />
    <TestDuration Test="MessageTest.CanStreamUserTypeInUnnamedNameSpace" Duration="1" />
    <TestDuration Test="MessageTest.CanStreamUserTypeInUserNameSpace" Duration="1" />
    <TestDuration Test="MessageTest.CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal" Duration="1" />
    <TestDuration Test="MessageTest.NullPointers" Duration="1" />
    <TestDuration Test="MessageTest.WideStrings" Duration="1" />
    <TestDuration Test="My/CodeLocationForTYPEDTESTP/0.Verify" Duration="1" />
    <TestDuration Test="NativeArrayTest.ConstructorFromArrayWorks" Duration="1" />
    <TestDuration Test="NativeArrayTest.CreatesAndDeletesCopyOfArrayWhenAskedTo" Duration="1" />
    <TestDuration Test="NativeArrayTest.MethodsWork" Duration="1" />
    <TestDuration Test="NativeArrayTest.TypeMembersAreCorrect" Duration="1" />
    <TestDuration Test="NativeArrayTest.WorksForTwoDimensionalArray" Duration="1" />
    <TestDuration Test="NestedTestingNamespaceTest.Failure" Duration="1" />
    <TestDuration Test="NestedTestingNamespaceTest.Success" Duration="1" />
    <TestDuration Test="NoFatalFailureTest.AssertNoFatalFailureOnFatalFailure" Duration="1" />
    <TestDuration Test="NoFatalFailureTest.ExpectNoFatalFailureOnFatalFailure" Duration="1" />
    <TestDuration Test="NoFatalFailureTest.MessageIsStreamable" Duration="1" />
    <TestDuration Test="NoFatalFailureTest.NoFailure" Duration="1" />
    <TestDuration Test="NoFatalFailureTest.NonFatalIsNoFailure" Duration="1" />
    <TestDuration Test="NullLiteralTest.IsFalseForNonNullLiterals" Duration="1" />
    <TestDuration Test="NullLiteralTest.IsTrueForNullLiterals" Duration="1" />
    <TestDuration Test="ParseInt32FlagTest.ParsesAndReturnsValidValue" Duration="1" />
    <TestDuration Test="ParseInt32FlagTest.ReturnsDefaultWhenValueIsInvalid" Duration="1" />
    <TestDuration Test="ParseInt32FlagTest.ReturnsDefaultWhenValueOverflows" Duration="1" />
    <TestDuration Test="ParseInt32FlagTest.ReturnsFalseForInvalidFlag" Duration="1" />
    <TestDuration Test="Pred1Test.SingleEvaluationOnFailure" Duration="1" />
    <TestDuration Test="Pred1Test.WithFormat" Duration="1" />
    <TestDuration Test="Pred1Test.WithoutFormat" Duration="1" />
    <TestDuration Test="PredicateAssertionTest.AcceptsOverloadedFunction" Duration="1" />
    <TestDuration Test="PredicateAssertionTest.AcceptsTemplateFunction" Duration="1" />
    <TestDuration Test="PredicateFormatAssertionTest.AcceptsOverloadedFunction" Duration="1" />
    <TestDuration Test="PredicateFormatAssertionTest.AcceptsTemplateFunction" Duration="1" />
    <TestDuration Test="PredTest.SingleEvaluationOnFailure" Duration="1" />
    <TestDuration Test="PredTest.WithFormat" Duration="1" />
    <TestDuration Test="PredTest.WithoutFormat" Duration="1" />
    <TestDuration Test="RandomDeathTest.GeneratesCrashesOnInvalidRange" Duration="55" />
    <TestDuration Test="RandomTest.GeneratesNumbersWithinRange" Duration="1" />
    <TestDuration Test="RandomTest.RepeatsWhenReseeded" Duration="1" />
    <TestDuration Test="RemoveConstTest.DoesNotAffectNonConstType" Duration="1" />
    <TestDuration Test="RemoveConstTest.MacroVersion" Duration="1" />
    <TestDuration Test="RemoveConstTest.RemovesConst" Duration="1" />
    <TestDuration Test="RemoveReferenceTest.DoesNotAffectNonReferenceType" Duration="1" />
    <TestDuration Test="RemoveReferenceTest.MacroVersion" Duration="1" />
    <TestDuration Test="RemoveReferenceTest.RemovesReference" Duration="1" />
    <TestDuration Test="RemoveReferenceToConstTest.Works" Duration="1" />
    <TestDuration Test="ScopedFakeTestPartResultReporterTest.DeprecatedConstructor" Duration="1" />
    <TestDuration Test="ScopedFakeTestPartResultReporterTest.InterceptsTestFailures" Duration="1" />
    <TestDuration Test="ScopedFakeTestPartResultReporterWithThreadsTest.InterceptsTestFailuresInAllThreads" Duration="1" />
    <TestDuration Test="SetUpTestCaseTest.Test1" Duration="1" />
    <TestDuration Test="SetUpTestCaseTest.Test2" Duration="1" />
    <TestDuration Test="ShouldRunTestOnShardTest.IsPartitionWhenThereAreFiveShards" Duration="1" />
    <TestDuration Test="ShouldRunTestOnShardTest.IsPartitionWhenThereIsOneShard" Duration="1" />
    <TestDuration Test="ShouldShardDeathTest.AbortsWhenShardingEnvVarsAreInvalid" Duration="106" />
    <TestDuration Test="ShouldShardTest.ReturnsFalseWhenNeitherEnvVarIsSet" Duration="1" />
    <TestDuration Test="ShouldShardTest.ReturnsFalseWhenTotalShardIsOne" Duration="1" />
    <TestDuration Test="ShouldShardTest.WorksWhenShardEnvVarsAreValid" Duration="1" />
    <TestDuration Test="SingleEvaluationTest.ASSERT_STR" Duration="1" />
    <TestDuration Test="SingleEvaluationTest.ExceptionTests" Duration="1" />
    <TestDuration Test="SingleEvaluationTest.FailedASSERT_NE" Duration="1" />
    <TestDuration Test="SingleEvaluationTest.FailedASSERT_STREQ" Duration="1" />
    <TestDuration Test="SingleEvaluationTest.OtherCases" Duration="1" />
    <TestDuration Test="SkipPrefixTest.DoesNotSkipWhenPrefixDoesNotMatch" Duration="1" />
    <TestDuration Test="SkipPrefixTest.SkipsWhenPrefixMatches" Duration="1" />
    <TestDuration Test="StaticAssertTypeEqTest.CompilesForEqualTypes" Duration="1" />
    <TestDuration Test="StaticAssertTypeEqTest.WorksInClass" Duration="1" />
    <TestDuration Test="StreamableTest.BasicIoManip" Duration="1" />
    <TestDuration Test="StreamableTest.int" Duration="1" />
    <TestDuration Test="StreamableTest.NULChar" Duration="1" />
    <TestDuration Test="StreamableTest.NullCharPtr" Duration="1" />
    <TestDuration Test="StreamableTest.string" Duration="1" />
    <TestDuration Test="StreamableTest.stringWithEmbeddedNUL" Duration="1" />
    <TestDuration Test="StreamableToStringTest.CString" Duration="1" />
    <TestDuration Test="StreamableToStringTest.NullCString" Duration="1" />
    <TestDuration Test="StreamableToStringTest.NullPointer" Duration="1" />
    <TestDuration Test="StreamableToStringTest.Pointer" Duration="1" />
    <TestDuration Test="StreamableToStringTest.Scalar" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.AnyThrow" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.FloatingPointEquals" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.IntegerEquals" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.IntegerLessThan" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.NoThrow" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.StringNotEqualIgnoringCase" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.StringsEqual" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.StringsEqualIgnoringCase" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.StringsNotEqual" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.Throw" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.Truth" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.Truth2" Duration="1" />
    <TestDuration Test="StreamingAssertionsTest.Unconditional" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STRCASEEQ" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STRCASENE" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STREQ" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STREQ_Null" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STREQ_Null2" Duration="1" />
    <TestDuration Test="StringAssertionTest.ASSERT_STRNE" Duration="1" />
    <TestDuration Test="StringAssertionTest.STREQ_Wide" Duration="1" />
    <TestDuration Test="StringAssertionTest.STRNE_Wide" Duration="1" />
    <TestDuration Test="StringTest.CaseInsensitiveWideCStringEquals" Duration="1" />
    <TestDuration Test="StringTest.EndsWithCaseInsensitive" Duration="1" />
    <TestDuration Test="StringTest.ShowWideCString" Duration="1" />
    <TestDuration Test="SuccessfulAssertionTest.ASSERT" Duration="1" />
    <TestDuration Test="SuccessfulAssertionTest.ASSERT_STR" Duration="1" />
    <TestDuration Test="SuccessfulAssertionTest.EXPECT" Duration="1" />
    <TestDuration Test="SuccessfulAssertionTest.EXPECT_STR" Duration="1" />
    <TestDuration Test="SuccessfulAssertionTest.SUCCEED" Duration="1" />
    <TestDuration Test="TestEventListenersTest.Append" Duration="1" />
    <TestDuration Test="TestEventListenersTest.ConstructionWorks" Duration="1" />
    <TestDuration Test="TestEventListenersTest.DestructionWorks" Duration="1" />
    <TestDuration Test="TestEventListenersTest.Release" Duration="1" />
    <TestDuration Test="TestInfoTest.Names" Duration="1" />
    <TestDuration Test="TestInfoTest.result" Duration="1" />
    <TestDuration Test="TestLifeCycleTest.Test1" Duration="1" />
    <TestDuration Test="TestLifeCycleTest.Test2" Duration="1" />
    <TestDuration Test="TestPropertyTest.ConstructorWorks" Duration="1" />
    <TestDuration Test="TestPropertyTest.ReplaceStringValue" Duration="1" />
    <TestDuration Test="TestPropertyTest.SetValue" Duration="1" />
    <TestDuration Test="TestPropertyTest.StringValue" Duration="1" />
    <TestDuration Test="TestResultDeathTest.GetTestPartResult" Duration="46" />
    <TestDuration Test="TestResultPropertyTest.GetTestProperty" Duration="47" />
    <TestDuration Test="TestResultPropertyTest.MultiplePropertiesFoundWhenAdded" Duration="1" />
    <TestDuration Test="TestResultPropertyTest.NoPropertiesFoundWhenNoneAreAdded" Duration="1" />
    <TestDuration Test="TestResultPropertyTest.OnePropertyFoundWhenAdded" Duration="1" />
    <TestDuration Test="TestResultPropertyTest.OverridesValuesForDuplicateKeys" Duration="1" />
    <TestDuration Test="TestResultTest.Failed" Duration="1" />
    <TestDuration Test="TestResultTest.Passed" Duration="1" />
    <TestDuration Test="TestResultTest.total_part_count" Duration="1" />
    <TestDuration Test="UnitTestRecordPropertyTest.AddFailureInsideTestsWhenUsingTestCaseReservedKeys" Duration="1" />
    <TestDuration Test="UnitTestRecordPropertyTest.AddRecordWithReservedKeysGeneratesCorrectPropertyList" Duration="1" />
    <TestDuration Test="UnitTestRecordPropertyTest.MultiplePropertiesFoundWhenAdded" Duration="1" />
    <TestDuration Test="UnitTestRecordPropertyTest.OnePropertyFoundWhenAdded" Duration="1" />
    <TestDuration Test="UnitTestRecordPropertyTest.OverridesValuesForDuplicateKeys" Duration="1" />
    <TestDuration Test="UnitTestTest.CanGetOriginalWorkingDir" Duration="1" />
    <TestDuration Test="UnitTestTest.ReturnsPlausibleTimestamp" Duration="1" />
    <TestDuration Test="VectorShuffleTest.HandlesEmptyRange" Duration="1" />
    <TestDuration Test="VectorShuffleTest.HandlesRangeOfSizeOne" Duration="1" />
    <TestDuration Test="VectorShuffleTest.ShufflesEndOfVector" Duration="1" />
    <TestDuration Test="VectorShuffleTest.ShufflesEntireVector" Duration="1" />
    <TestDuration Test="VectorShuffleTest.ShufflesMiddleOfVector" Duration="1" />
    <TestDuration Test="VectorShuffleTest.ShufflesRepeatably" Duration="1" />
    <TestDuration Test="VectorShuffleTest.ShufflesStartOfVector" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncode12To16Bits" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncode8To11Bits" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncodeAscii" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncodeInvalidUtf16SurrogatePair" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncodeNul" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.CanEncodeValidUtf16SUrrogatePairs" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.ConcatenatesCodepointsCorrectly" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.StopsOnNulCharacter" Duration="1" />
    <TestDuration Test="WideStringToUtf8Test.StopsWhenLengthLimitReached" Duration="1" />
  </TestDurations>
</GtaTestDurations>